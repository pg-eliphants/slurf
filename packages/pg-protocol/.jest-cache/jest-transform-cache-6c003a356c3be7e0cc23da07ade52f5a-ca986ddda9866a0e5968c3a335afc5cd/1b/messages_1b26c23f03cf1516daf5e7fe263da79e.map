{"file":"C:\\repos\\node-postgres\\packages\\pg-protocol\\src\\messages.ts","mappings":"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","names":[],"sources":["C:\\repos\\node-postgres\\packages\\pg-protocol\\src\\messages.ts"],"sourcesContent":["export type Mode = 'text' | 'binary';\n\nexport type MessageName =\n    | 'parseComplete'\n    | 'bindComplete'\n    | 'closeComplete'\n    | 'noData'\n    | 'portalSuspended'\n    | 'replicationStart'\n    | 'emptyQuery'\n    | 'copyDone'\n    | 'copyData'\n    | 'rowDescription'\n    | 'parameterDescription'\n    | 'parameterStatus'\n    | 'backendKeyData'\n    | 'notification'\n    | 'readyForQuery'\n    | 'commandComplete'\n    | 'dataRow'\n    | 'copyInResponse'\n    | 'copyOutResponse'\n    | 'authenticationOk'\n    | 'authenticationMD5Password'\n    | 'authenticationCleartextPassword'\n    | 'authenticationSASL'\n    | 'authenticationSASLContinue'\n    | 'authenticationSASLFinal'\n    | 'error'\n    | 'notice';\n\nexport interface BackendMessage {\n    name: MessageName;\n    length: number;\n}\n\nexport const parseComplete: BackendMessage = {\n    name: 'parseComplete',\n    length: 5\n};\n\nexport const bindComplete: BackendMessage = {\n    name: 'bindComplete',\n    length: 5\n};\n\nexport const closeComplete: BackendMessage = {\n    name: 'closeComplete',\n    length: 5\n};\n\nexport const noData: BackendMessage = {\n    name: 'noData',\n    length: 5\n};\n\nexport const portalSuspended: BackendMessage = {\n    name: 'portalSuspended',\n    length: 5\n};\n\nexport const replicationStart: BackendMessage = {\n    name: 'replicationStart',\n    length: 4\n};\n\nexport const emptyQuery: BackendMessage = {\n    name: 'emptyQuery',\n    length: 4\n};\n\nexport const copyDone: BackendMessage = {\n    name: 'copyDone',\n    length: 4\n};\n\ninterface NoticeOrError {\n    message?: string;\n    severity?: string;\n    code?: string;\n    detail?: string;\n    hint?: string;\n    position?: string;\n    internalPosition?: string;\n    internalQuery?: string;\n    where?: string;\n    schema?: string;\n    table?: string;\n    column?: string;\n    dataType?: string;\n    constraint?: string;\n    file?: string;\n    line?: string;\n    routine?: string;\n}\n\nexport class DatabaseError extends Error implements NoticeOrError {\n    public severity?: string;\n    public code?: string;\n    public detail?: string;\n    public hint?: string;\n    public position?: string;\n    public internalPosition?: string;\n    public internalQuery?: string;\n    public where?: string;\n    public schema?: string;\n    public table?: string;\n    public column?: string;\n    public dataType?: string;\n    public constraint?: string;\n    public file?: string;\n    public line?: string;\n    public routine?: string;\n    constructor(\n        message: string,\n        public readonly length: number,\n        public override readonly name: MessageName\n    ) {\n        super(message);\n    }\n}\n\nexport class CopyDataMessage {\n    public readonly name = 'copyData';\n    constructor(\n        public readonly length: number,\n        public readonly chunk: Buffer\n    ) {}\n}\n\nexport class CopyResponse {\n    public readonly columnTypes: number[];\n    constructor(\n        public readonly length: number,\n        public readonly name: MessageName,\n        public readonly binary: boolean,\n        columnCount: number\n    ) {\n        this.columnTypes = new Array(columnCount);\n    }\n}\n\nexport class Field {\n    constructor(\n        public readonly name: string,\n        public readonly tableID: number,\n        public readonly columnID: number,\n        public readonly dataTypeID: number,\n        public readonly dataTypeSize: number,\n        public readonly dataTypeModifier: number,\n        public readonly format: Mode\n    ) {}\n}\n\nexport class RowDescriptionMessage {\n    public readonly name: MessageName = 'rowDescription';\n    public readonly fields: Field[];\n    constructor(\n        public readonly length: number,\n        public readonly fieldCount: number\n    ) {\n        this.fields = new Array(this.fieldCount);\n    }\n}\n\nexport class ParameterDescriptionMessage {\n    public readonly name: MessageName = 'parameterDescription';\n    public readonly dataTypeIDs: number[];\n    constructor(\n        public readonly length: number,\n        public readonly parameterCount: number\n    ) {\n        this.dataTypeIDs = new Array(this.parameterCount);\n    }\n}\n\nexport class ParameterStatusMessage {\n    public readonly name: MessageName = 'parameterStatus';\n    constructor(\n        public readonly length: number,\n        public readonly parameterName: string,\n        public readonly parameterValue: string\n    ) {}\n}\n\nexport class AuthenticationMD5Password implements BackendMessage {\n    public readonly name: MessageName = 'authenticationMD5Password';\n    constructor(\n        public readonly length: number,\n        public readonly salt: Buffer\n    ) {}\n}\n\nexport class BackendKeyDataMessage {\n    public readonly name: MessageName = 'backendKeyData';\n    constructor(\n        public readonly length: number,\n        public readonly processID: number,\n        public readonly secretKey: number\n    ) {}\n}\n\nexport class NotificationResponseMessage {\n    public readonly name: MessageName = 'notification';\n    constructor(\n        public readonly length: number,\n        public readonly processId: number,\n        public readonly channel: string,\n        public readonly payload: string\n    ) {}\n}\n\nexport class ReadyForQueryMessage {\n    public readonly name: MessageName = 'readyForQuery';\n    constructor(\n        public readonly length: number,\n        public readonly status: string\n    ) {}\n}\n\nexport class CommandCompleteMessage {\n    public readonly name: MessageName = 'commandComplete';\n    constructor(\n        public readonly length: number,\n        public readonly text: string\n    ) {}\n}\n\nexport class DataRowMessage {\n    public readonly fieldCount: number;\n    public readonly name: MessageName = 'dataRow';\n    constructor(\n        public length: number,\n        public fields: any[]\n    ) {\n        this.fieldCount = fields.length;\n    }\n}\n\nexport class NoticeMessage implements BackendMessage, NoticeOrError {\n    constructor(\n        public readonly length: number,\n        public readonly message: string\n    ) {}\n    public readonly name = 'notice';\n    public severity?: string;\n    public code?: string;\n    public detail?: string;\n    public hint?: string;\n    public position?: string;\n    public internalPosition?: string;\n    public internalQuery?: string;\n    public where?: string;\n    public schema?: string;\n    public table?: string;\n    public column?: string;\n    public dataType?: string;\n    public constraint?: string;\n    public file?: string;\n    public line?: string;\n    public routine?: string;\n}\n"],"version":3}