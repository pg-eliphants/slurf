6fbcce33503608c71d7bd29122e48212
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BufferReader = void 0;
const emptyBuffer = Buffer.allocUnsafe(0);
class BufferReader {
    offset;
    buffer = emptyBuffer;
    // TODO(bmc): support non-utf8 encoding?
    encoding = 'utf-8';
    constructor(offset = 0) {
        this.offset = offset;
    }
    setBuffer(offset, buffer) {
        this.offset = offset;
        this.buffer = buffer;
    }
    int16() {
        const result = this.buffer.readInt16BE(this.offset);
        this.offset += 2;
        return result;
    }
    byte() {
        const result = this.buffer[this.offset];
        this.offset++;
        return result;
    }
    int32() {
        const result = this.buffer.readInt32BE(this.offset);
        this.offset += 4;
        return result;
    }
    string(length) {
        const encoding = this.encoding;
        //@ts-ignore
        const result = this.buffer.toString(encoding, this.offset, this.offset + length);
        this.offset += length;
        return result;
    }
    cstring() {
        const start = this.offset;
        let end = start;
        while (this.buffer[end++] !== 0) { }
        this.offset = end;
        //@ts-ignore
        return this.buffer.toString(this.encoding, start, end - 1);
    }
    bytes(length) {
        const result = this.buffer.slice(this.offset, this.offset + length);
        this.offset += length;
        return result;
    }
}
exports.BufferReader = BufferReader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXHJlcG9zXFxub2RlLXBvc3RncmVzXFxwYWNrYWdlc1xccGctcHJvdG9jb2xcXHNyY1xcYnVmZmVyLXJlYWRlci50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBRXpDLE1BQWEsWUFBWTtJQU1IO0lBTFosTUFBTSxHQUFXLFdBQVcsQ0FBQTtJQUVwQyx3Q0FBd0M7SUFDaEMsUUFBUSxHQUFXLE9BQU8sQ0FBQTtJQUVsQyxZQUFvQixTQUFpQixDQUFDO1FBQWxCLFdBQU0sR0FBTixNQUFNLENBQVk7SUFBRyxDQUFDO0lBRW5DLFNBQVMsQ0FBQyxNQUFjLEVBQUUsTUFBYztRQUM3QyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQTtRQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQTtJQUN0QixDQUFDO0lBRU0sS0FBSztRQUNWLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUNuRCxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQTtRQUNoQixPQUFPLE1BQU0sQ0FBQTtJQUNmLENBQUM7SUFFTSxJQUFJO1FBQ1QsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDdkMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFBO1FBQ2IsT0FBTyxNQUFNLENBQUE7SUFDZixDQUFDO0lBRU0sS0FBSztRQUNWLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUNuRCxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQTtRQUNoQixPQUFPLE1BQU0sQ0FBQTtJQUNmLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBYztRQUMxQixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFBO1FBQzlCLFlBQVk7UUFDWixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxDQUFBO1FBQ2hGLElBQUksQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFBO1FBQ3JCLE9BQU8sTUFBTSxDQUFBO0lBQ2YsQ0FBQztJQUVNLE9BQU87UUFDWixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFBO1FBQ3pCLElBQUksR0FBRyxHQUFHLEtBQUssQ0FBQTtRQUNmLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxHQUFFO1FBQ25DLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFBO1FBQ2pCLFlBQVk7UUFDWixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQTtJQUM1RCxDQUFDO0lBRU0sS0FBSyxDQUFDLE1BQWM7UUFDekIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxDQUFBO1FBQ25FLElBQUksQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFBO1FBQ3JCLE9BQU8sTUFBTSxDQUFBO0lBQ2YsQ0FBQztDQUNGO0FBckRELG9DQXFEQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxccmVwb3NcXG5vZGUtcG9zdGdyZXNcXHBhY2thZ2VzXFxwZy1wcm90b2NvbFxcc3JjXFxidWZmZXItcmVhZGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVtcHR5QnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKDApXHJcblxyXG5leHBvcnQgY2xhc3MgQnVmZmVyUmVhZGVyIHtcclxuICBwcml2YXRlIGJ1ZmZlcjogQnVmZmVyID0gZW1wdHlCdWZmZXJcclxuXHJcbiAgLy8gVE9ETyhibWMpOiBzdXBwb3J0IG5vbi11dGY4IGVuY29kaW5nP1xyXG4gIHByaXZhdGUgZW5jb2Rpbmc6IHN0cmluZyA9ICd1dGYtOCdcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBvZmZzZXQ6IG51bWJlciA9IDApIHt9XHJcblxyXG4gIHB1YmxpYyBzZXRCdWZmZXIob2Zmc2V0OiBudW1iZXIsIGJ1ZmZlcjogQnVmZmVyKTogdm9pZCB7XHJcbiAgICB0aGlzLm9mZnNldCA9IG9mZnNldFxyXG4gICAgdGhpcy5idWZmZXIgPSBidWZmZXJcclxuICB9XHJcblxyXG4gIHB1YmxpYyBpbnQxNigpOiBudW1iZXIge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gdGhpcy5idWZmZXIucmVhZEludDE2QkUodGhpcy5vZmZzZXQpXHJcbiAgICB0aGlzLm9mZnNldCArPSAyXHJcbiAgICByZXR1cm4gcmVzdWx0XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYnl0ZSgpOiBudW1iZXIge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gdGhpcy5idWZmZXJbdGhpcy5vZmZzZXRdXHJcbiAgICB0aGlzLm9mZnNldCsrXHJcbiAgICByZXR1cm4gcmVzdWx0XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgaW50MzIoKTogbnVtYmVyIHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuYnVmZmVyLnJlYWRJbnQzMkJFKHRoaXMub2Zmc2V0KVxyXG4gICAgdGhpcy5vZmZzZXQgKz0gNFxyXG4gICAgcmV0dXJuIHJlc3VsdFxyXG4gIH1cclxuXHJcbiAgcHVibGljIHN0cmluZyhsZW5ndGg6IG51bWJlcik6IHN0cmluZyB7XHJcbiAgICBjb25zdCBlbmNvZGluZyA9IHRoaXMuZW5jb2RpbmdcclxuICAgIC8vQHRzLWlnbm9yZVxyXG4gICAgY29uc3QgcmVzdWx0ID0gdGhpcy5idWZmZXIudG9TdHJpbmcoZW5jb2RpbmcsIHRoaXMub2Zmc2V0LCB0aGlzLm9mZnNldCArIGxlbmd0aClcclxuICAgIHRoaXMub2Zmc2V0ICs9IGxlbmd0aFxyXG4gICAgcmV0dXJuIHJlc3VsdFxyXG4gIH1cclxuXHJcbiAgcHVibGljIGNzdHJpbmcoKTogc3RyaW5nIHtcclxuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy5vZmZzZXRcclxuICAgIGxldCBlbmQgPSBzdGFydFxyXG4gICAgd2hpbGUgKHRoaXMuYnVmZmVyW2VuZCsrXSAhPT0gMCkge31cclxuICAgIHRoaXMub2Zmc2V0ID0gZW5kXHJcbiAgICAvL0B0cy1pZ25vcmVcclxuICAgIHJldHVybiB0aGlzLmJ1ZmZlci50b1N0cmluZyh0aGlzLmVuY29kaW5nLCBzdGFydCwgZW5kIC0gMSlcclxuICB9XHJcblxyXG4gIHB1YmxpYyBieXRlcyhsZW5ndGg6IG51bWJlcik6IEJ1ZmZlciB7XHJcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLmJ1ZmZlci5zbGljZSh0aGlzLm9mZnNldCwgdGhpcy5vZmZzZXQgKyBsZW5ndGgpXHJcbiAgICB0aGlzLm9mZnNldCArPSBsZW5ndGhcclxuICAgIHJldHVybiByZXN1bHRcclxuICB9XHJcbn1cclxuIl0sInZlcnNpb24iOjN9