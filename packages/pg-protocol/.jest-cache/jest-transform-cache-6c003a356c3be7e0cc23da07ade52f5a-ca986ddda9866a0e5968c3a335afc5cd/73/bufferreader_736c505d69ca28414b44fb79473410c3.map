{"version":3,"names":["cov_4mrnkc1b0","actualCoverage","s","emptyBuffer","Buffer","allocUnsafe","BufferReader","offset","buffer","encoding","constructor","b","f","setBuffer","int16","result","readInt16BE","byte","int32","readInt32BE","string","length","toString","cstring","start","end","bytes","slice","exports"],"sources":["C:\\repos\\node-postgres\\packages\\pg-protocol\\src\\buffer-reader.ts"],"sourcesContent":["const emptyBuffer = Buffer.allocUnsafe(0)\r\n\r\nexport class BufferReader {\r\n  private buffer: Buffer = emptyBuffer\r\n\r\n  // TODO(bmc): support non-utf8 encoding?\r\n  private encoding: string = 'utf-8'\r\n\r\n  constructor(private offset: number = 0) {}\r\n\r\n  public setBuffer(offset: number, buffer: Buffer): void {\r\n    this.offset = offset\r\n    this.buffer = buffer\r\n  }\r\n\r\n  public int16(): number {\r\n    const result = this.buffer.readInt16BE(this.offset)\r\n    this.offset += 2\r\n    return result\r\n  }\r\n\r\n  public byte(): number {\r\n    const result = this.buffer[this.offset]\r\n    this.offset++\r\n    return result\r\n  }\r\n\r\n  public int32(): number {\r\n    const result = this.buffer.readInt32BE(this.offset)\r\n    this.offset += 4\r\n    return result\r\n  }\r\n\r\n  public string(length: number): string {\r\n    const encoding = this.encoding\r\n    //@ts-ignore\r\n    const result = this.buffer.toString(encoding, this.offset, this.offset + length)\r\n    this.offset += length\r\n    return result\r\n  }\r\n\r\n  public cstring(): string {\r\n    const start = this.offset\r\n    let end = start\r\n    while (this.buffer[end++] !== 0) {}\r\n    this.offset = end\r\n    //@ts-ignore\r\n    return this.buffer.toString(this.encoding, start, end - 1)\r\n  }\r\n\r\n  public bytes(length: number): Buffer {\r\n    const result = this.buffer.slice(this.offset, this.offset + length)\r\n    this.offset += length\r\n    return result\r\n  }\r\n}\r\n"],"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"}